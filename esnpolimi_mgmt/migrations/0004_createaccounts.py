# Generated by Django 3.1 on 2020-11-26 20:19

from django.db import migrations

from esnpolimi_mgmt.models import Cash as CashClass

offices = ["Leonardo", "Bovisa", "Other"]
payment_methods = {"Cash": "C", "Verse": "D", "PayPal": "D"}
accounts = ["Leonardo Safe", "Bovisa Safe", "Bank", "Verse", "PayPal"]
account_mapping = {
    ("Cash", "Bovisa"): "Bovisa Safe",
    ("Cash", "Leonardo"): "Leonardo Safe",
    ("PayPal", "Bovisa"): "PayPal",
    ("PayPal", "Leonardo"): "PayPal",
    ("PayPal", "Other"): "PayPal",
    ("Verse", "Bovisa"): "Verse",
    ("Verse", "Leonardo"): "Verse",
    ("Verse", "Other"): "Verse",
}


def createaccounts(apps, schema_editor):
    Office = apps.get_model("esnpolimi_mgmt", "Office")
    PaymentMethod = apps.get_model("esnpolimi_mgmt", "PaymentMethod")
    Account = apps.get_model("esnpolimi_mgmt", "Account")
    AccountMapping = apps.get_model("esnpolimi_mgmt", "AccountMapping")
    Cash = apps.get_model("esnpolimi_mgmt", "Cash")

    for name in offices:
        Office.objects.create(name=name)

    for name, type in payment_methods.items():
        PaymentMethod.objects.create(name=name, type=type)

    for name in accounts:
        Account.objects.create(name=name)

    for (p, o), a in account_mapping.items():
        payment_method = PaymentMethod.objects.get(name=p)
        office = Office.objects.get(name=o)
        account = Account.objects.get(name=a)
        AccountMapping.objects.create(
            office=office, payment_method=payment_method, account=account
        )

    for a in accounts[:2]:
        account = Account.objects.get(name=a)
        for note_type, _ in CashClass.Note.choices:
            Cash.objects.create(account=account, note_type=note_type)


def reverse(apps, schema_editor):
    Office = apps.get_model("esnpolimi_mgmt", "Office")
    PaymentMethod = apps.get_model("esnpolimi_mgmt", "PaymentMethod")
    Account = apps.get_model("esnpolimi_mgmt", "Account")
    AccountMapping = apps.get_model("esnpolimi_mgmt", "AccountMapping")
    Cash = apps.get_model("esnpolimi_mgmt", "Cash")

    Office.objects.filter(name__in=offices).delete()
    PaymentMethod.filter(name__in=payment_methods.keys()).delete()
    Account.objects.filter(name__in=accounts).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("esnpolimi_mgmt", "0003_createsuperuser"),
    ]

    operations = [
        migrations.RunPython(createaccounts, reverse),
    ]
